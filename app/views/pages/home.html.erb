<section class="demo">
  <%= simple_form_for(:parse, url: parses_path, remote: true) do |form| %>
    <%= form.label :source, 'Try some code' %>
    <div class="source">
      <%= form.text_area :source %>
      <%= form.select :language, lexer_options_for_select, { selected: 'ruby' } %>
    </div>
    <pre class="highlight"></pre>
  <% end %>
</section>
<section class="key-features">
  <ul>
    <li class="languages">
      <h3>Plenty of Languages</h3>
      <article>
        <p>Rouge supports a copious amount of languages including, but not limited to Ruby, JavaScript, Swift, Go, C++, and Haskell. It can parse <%= lexer_count %> languages and counting.</p>
      </article>
    </li>
    <li class="parsing">
      <h3>Language Parsing</h3>
      <article>
        <p>The language parser in Rouge is incredible. It parses code at high quality, even when dealing with strange features of a language. Try it above and see for yourself.</p>
      </article>
    </li>
    <li class="pygments">
      <h3>Pygments Compatible</h3>
      <article>
        <p>We think <%= link_to 'Pygments', 'http://pygments.org', target: '_blank' %> is great, that's why Rouge themes are 100% compatible with Pygments' stylesheets. No need to make your theme again, and no need to spawn any Python subprocesses either. Rouge is pure Ruby.</p>
      </article>
    </li>
  </ul>
</section>
